{"version":3,"sources":["logo.svg","StyleObjects/colors.js","StyleObjects/generalStyles.ts","Component/Keypad.jsx","Component/BasicCalculator.jsx","Component/GraphingCalculator.jsx","Component/Footer.jsx","Component/Calculator.jsx","App.js","reportWebVitals.js","index.js"],"names":["coreColorPalette","brandBlue","light","main","dark","darkest","black","extra","success","error","warning","warningIcon","grey","smoke","slate","snow","colors","generalFormStyles","createStyles","collapseSections","cursor","padding","position","collapseContainer","borderTop","outerLayout","digits","marginTop","formSectionMargin","marginBottom","textAlign","wtilabel","color","marginLeft","wtibutton","backgroundColor","wtiprice","calcButton","display","graphingCalculator","marginRight","width","height","customBackground","wtiBackground","alignItems","calculatorBorder","borderStyle","borderWidth","align","footer","useFormStyles","makeStyles","Keypad","displayValue","setDisplayValue","classes","editDisplay","value","str","concat","calculate","s","i","length","trim","stack","currentNumber","operation","updateStack","getResult","isNaN","charCodeAt","number","index","toString","push","pop","Math","trunc","sqrt","pow","reduce","a","b","Grid","container","spacing","item","xs","Button","variant","onClick","textValue","substring","className","BasicCalculator","useState","Typography","TextField","id","label","autoFocus","GraphingCalculator","graphRef","useRef","useEffect","current","Desmos","setExpression","latex","ref","Footer","Calculator","wtiPrice","setWtiPrice","component","size","axios","get","then","res","htmldoc","DOMParser","parseFromString","data","console","log","getElementsByClassName","innerHTML","catch","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAAe,I,2DCATA,EAAmB,CACrBC,UAAY,CACRC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,QAAS,WAEbC,MAAQ,CACJH,KAAO,WAEXI,MAAQ,CACJC,QAAU,UACVC,MAAO,UACPC,QAAS,UACTC,YAAa,WACbC,KAAM,UACNC,MAAO,WAGXC,MAAQ,CACJZ,MAAQ,WAGZa,KAAO,CACHZ,KAAM,UACNC,KAAM,YAKDY,GACIhB,EAAiBC,UAAUE,KAC1BH,EAAiBO,MAAMC,QACxBR,EAAiBc,MAAMZ,MAC9BF,G,SCnBGiB,GAZiBC,YAAa,CACvCC,iBAAkB,CACdC,OAAQ,UACRC,QAAS,SACTC,SAAU,YAEdC,kBAAmB,CACfD,SAAU,SACVE,UAAW,UAIcN,YAAa,CAC1CO,YAAY,GAGZC,OAAS,CACLC,UAAW,QAGfC,kBAAmB,CACfC,aAAc,OACdC,UAAW,UAEfC,SAAU,CACNC,MAAOhB,EAAYD,KAAKZ,KACxBwB,UAAW,OACXM,WAAY,QAEhBC,UAAU,CACNC,gBAAiBnB,EAAYD,KAAKZ,KAClCwB,UAAW,OACXG,UAAW,OAEXD,aAAc,QAGlBO,SAAW,CACPD,gBAAiBnB,EAAYD,KAAKZ,KAClCwB,UAAW,UACXG,UAAW,OACXD,aAAc,QAElBQ,WAAY,CACRhB,QAAS,OACTiB,QAAS,QAEbC,mBAAqB,CACjBZ,UAAW,OACXa,YAAa,QACbC,MAAO,QACPC,OAAQ,SAEZC,iBAAmB,CACfR,gBAAiBnB,EAAYD,KAAKX,MAEtCwC,cAAc,CACVT,gBAAiBnB,EAAYf,UAAUG,KACvCuB,UAAW,OACXN,QAAS,cACTwB,WAAY,UAEhBC,iBAAmB,CACfX,gBAAiBnB,EAAYD,KAAKZ,KAClCwB,UAAW,OACXM,WAAY,QACZc,YAAa,SACbC,YAAa,MACb3B,QAAS,OACToB,MAAO,QACPQ,MAAO,UAEXC,OAAQ,CACJvB,UAAW,MACXQ,gBAAiBnB,EAAYV,MAAMH,KACnC6B,MAAOhB,EAAYD,KAAKZ,KACxBkB,QAAS,eACTS,UAAW,W,OC1EbqB,EAAgBC,YAAWnC,GAElB,SAASoC,EAAT,GAAoD,IAAlCC,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,gBACrCC,EAAUL,IAEVM,EAAc,SAACC,GACjB,IAAIC,EAAML,EAAaM,OAAOF,GAC9BH,EAAgBI,IAWhBE,EAAY,SAAZA,EAAsBC,GAAW,IAARC,EAAO,uDAAH,EAC7B,IAAKD,EAAEE,OAAQ,OAAO,EAEtBF,EAAIA,EAAEG,OAON,IAJA,IAAIC,EAAQ,GACRC,EAAgB,EAChBC,EAAY,IAETL,EAAID,EAAEE,QACX,GAAa,MAATF,EAAEC,GAAN,CAOO,GAAa,MAATD,EAAEC,GAEX,OADAM,EAAYH,EAAOC,EAAeC,GAC3B,CAACE,EAAUJ,GAAQH,GAErBQ,MAAMT,EAAEC,MAAKI,EAAgC,GAAhBA,EAAqBL,EAAEC,GAAGS,WAAW,GAAK,IAAIA,WAAW,KACvFD,MAAMT,EAAEC,KAAOA,IAAMD,EAAEE,OAAS,KAClCK,EAAYH,EAAOC,EAAeC,GAClCA,EAAYN,EAAEC,GACdI,EAAgB,GAGpBJ,QAlBA,CAEE,MAAsBF,EAAUC,IADhCC,GACA,mBAAKU,EAAL,KAAaC,EAAb,KACAL,EAAYH,EAAOO,EAAQL,GAC3BL,EAAIW,IACJN,EAAYN,EAAEC,KAelB,OAAOR,EAAgBe,EAAUJ,GAAOS,aAGtCN,EAAc,SAAUH,EAAOC,EAAeC,GAChD,OAAQA,GACJ,IAAK,IAAKF,EAAMU,KAAKT,GAAgB,MACrC,IAAK,IAAKD,EAAMU,MAAMT,GAAgB,MACtC,IAAK,IAAKD,EAAMU,KAAKV,EAAMW,MAAQV,GAAgB,MACnD,IAAK,OAAKD,EAAMU,KAAKE,KAAKC,MAAMb,EAAMW,MAAQV,IAAiB,MAC/D,IAAK,SAAKD,EAAMU,KAAKE,KAAKE,KAAKb,IAAiB,MAChD,IAAK,IAAKD,EAAMU,KAAKE,KAAKG,IAAIf,EAAMW,MAAOV,MAI7CG,EAAY,SAAUJ,GACxB,OAAOA,EAAMgB,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,MAGtC,OACI,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAG,cAAY,YAAxC,UACI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAS,WACjCnC,EAAY,MACb,cAAY,kBAFf,mBAIJ,cAAC4B,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAS,WACjCnC,EAAY,MACb,cAAY,mBAFf,mBAIJ,cAAC4B,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAS,WACjCnC,EAAY,MADhB,mBAIJ,cAAC4B,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAS,WA1E7CrC,EAAgB,KA0ER,oBAIJ,cAAC8B,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAS,WACjCnC,EAAY,MACb,cAAY,cAFf,mBAIJ,cAAC4B,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,eAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAS,WACjCnC,EAAY,WACb,cAAY,iBAFf,cAEkC,SAFlC,SAIJ,cAAC4B,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAhB,qBAEJ,cAACN,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAS,WAzF9B,IAACC,EAChBtC,GADgBsC,EA0FOvC,GAzFGwC,UAAU,EAAGD,EAAU7B,OAAS,KAwFlD,mBAIJ,cAACqB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGM,UAAWvC,EAAQ9B,OAArC,SACI,cAACgE,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAS,WACjCnC,EAAY,MADhB,mBAIJ,cAAC4B,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGM,UAAWvC,EAAQ9B,OAArC,SACI,cAACgE,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAS,WACjCnC,EAAY,MADhB,mBAIJ,cAAC4B,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGM,UAAWvC,EAAQ9B,OAArC,SACI,cAACgE,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAS,WACjCnC,EAAY,MACb,cAAY,UAFf,mBAIJ,cAAC4B,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGM,UAAWvC,EAAQ9B,OAArC,SACI,cAACgE,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAS,WACjCnC,EAAY,SACb,cAAY,SAFf,sBAIJ,cAAC4B,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAS,WACjCnC,EAAY,MADhB,mBAIJ,cAAC4B,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAS,WACjCnC,EAAY,MACb,cAAY,UAFf,mBAIJ,cAAC4B,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAS,WACjCnC,EAAY,MADhB,mBAIJ,cAAC4B,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAS,WACjCnC,EAAY,MADhB,mBAIJ,cAAC4B,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAS,WACjCnC,EAAY,MADhB,mBAIJ,cAAC4B,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAS,WACjCnC,EAAY,MACb,cAAY,SAFf,mBAIJ,cAAC4B,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAS,WACjCnC,EAAY,MACb,cAAY,WAFf,mBAIJ,cAAC4B,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAS,WACjCnC,EAAY,MADhB,mBAIJ,cAAC4B,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAS,WACjCnC,EAAY,MADhB,mBAIJ,cAAC4B,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAS,WACjCnC,EAAY,MADhB,mBAIJ,cAAC4B,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAY,cAAY,gBAAgBC,QAAS,WAC7D/B,EAAUP,IADd,mBAIJ,cAAC+B,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAS,WACjCnC,EAAY,MACb,cAAY,SAFf,sBCtLhB,IAAMN,EAAgBC,YAAWnC,GAElB,SAAS+E,IACpB,IAAMxC,EAAUL,IAChB,EAAwC8C,mBAAS,IAAjD,mBAAO3C,EAAP,KAAqBC,EAArB,KACA,OACI,eAAC8B,EAAA,EAAD,CAAMU,UAAWvC,EAAQV,iBAAzB,UACI,cAACoD,EAAA,EAAD,CAAYP,QAAQ,KAApB,8BACA,cAACQ,EAAA,EAAD,CACAC,GAAG,iBACH,cAAY,aACZC,MAAM,GACNV,QAAQ,WACRjC,MAAOJ,EACPyC,UAAWvC,EAAQnB,WACnBiE,WAAS,IAET,cAACjD,EAAD,CAAQC,aAAeA,EAAcC,gBAAiBA,O,qBClB5DJ,EAAgBC,YAAWnC,GAElB,SAASsF,IACpB,IAAM/C,EAAUL,IACVqD,EAAWC,iBAAO,MAOxB,OANAC,qBAAU,WACHF,EAASG,SACSC,IAAOL,mBAAmBC,EAASG,SACzCE,cAAc,CAACT,GAAG,SAAUU,MAAM,OAEnD,IAEE,eAACzB,EAAA,EAAD,CAAMU,UAAWvC,EAAQjB,mBAAzB,UACI,cAAC2D,EAAA,EAAD,CAAYP,QAAQ,KAApB,iCACA,qBAAKS,GAAG,qBAAqBL,UAAWvC,EAAQjB,mBAAoBwE,IAAKP,O,WCd/ErD,EAAgBC,YAAWnC,GAE1B,SAAS+F,IACZ,IAAMxD,EAAUL,IAChB,OACI,sBAAK4C,UAAS,WAAMvC,EAAQN,QAA5B,UACI,qBAAK6C,UAAWvC,EAAQN,OAAxB,mBADJ,a,qBCDFC,G,OAAgBC,YAAWnC,IAGlB,SAASgG,IACpB,IAAMzD,EAAUL,IAChB,EAAgC8C,mBAAS,IAAzC,mBAAOiB,EAAP,KAAiBC,EAAjB,KA2CA,OACI,eAAC9B,EAAA,EAAD,CAAMC,WAAS,EAACS,UAAWvC,EAAQb,iBAAnC,UACI,cAAC0C,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACO,EAAD,MAEJ,cAACX,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACI,cAACc,EAAD,MAEJ,cAAClB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGM,UAAWvC,EAAQZ,cAArC,SACI,cAACsD,EAAA,EAAD,CAAYP,QAAQ,KAAKyB,UAAU,KAAKrB,UAAWvC,EAAQzB,SAA3D,0CAIJ,cAACsD,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGM,UAAWvC,EAAQZ,cAArC,SACI,cAAC8C,EAAA,EAAD,CAAQK,UAAWvC,EAAQtB,UAAWyD,QAAQ,YAAY0B,KAAK,SAASzB,QAAS,WAhCzF0B,IAAMC,IAAN,wBACKC,MAAK,SAACC,GAEH,IACIC,GADS,IAAIC,WACIC,gBAAgBH,EAAII,KAAM,aAC/CC,QAAQC,IAAI,WAAaL,EAAQM,uBAAuB,cAAc,GAAGC,WACzE,IAAIf,EAAWQ,EAAQM,uBAAuB,cAAc,GAAGC,UAC/Dd,EAAYD,MAEfgB,OAAM,SAACzH,GAGJqH,QAAQC,IAAI,QAAUtH,OAoBtB,+BAIJ,cAAC4E,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGM,UAAWvC,EAAQZ,cAArC,SACKsE,EAAW,cAACf,EAAA,EAAD,CAAWJ,UAAWvC,EAAQpB,SAAUgE,GAAG,iBAAiBC,MAAM,GAAGV,QAAQ,WAAWjC,MAAOwD,IAAe,OAE9H,cAAC7B,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGM,UAAWvC,EAAQZ,gBAEjC,cAACyC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGM,UAAWvC,EAAQZ,gBAEzC,cAACyC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACuB,EAAD,SCzEDmB,MARf,WACE,OACE,qBAAKpC,UAAU,MAAf,SACE,cAACkB,EAAD,OCMSmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6c8863c1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const coreColorPalette = {\r\n    brandBlue : {\r\n        light: '#5374A6',\r\n        main: '#25477B',\r\n        dark: '#143566',\r\n        darkest: '#112E54',\r\n    },\r\n    black : {\r\n        main : '#000000'\r\n    },\r\n    extra : {\r\n        success : '#43A342',\r\n        error: '#DE3030',\r\n        warning: '#D5632A',\r\n        warningIcon: '#E276640',\r\n        grey: '#98ADBD',\r\n        smoke: '#EAEDF1',\r\n    },\r\n\r\n    slate : {\r\n        light : '#66788C',\r\n    },\r\n\r\n    snow : {\r\n        main: '#FFFFFF',\r\n        dark: '#F5F7FA'\r\n    }\r\n\r\n}\r\n\r\nexport const colors = {\r\n    primaryBlue: coreColorPalette.brandBlue.main,\r\n    primaryGreen: coreColorPalette.extra.success,\r\n    primaryGrey: coreColorPalette.slate.light,\r\n    core: coreColorPalette,\r\n}","import { colors } from './colors'\r\nimport { createStyles } from '@material-ui/core'\r\n\r\nexport const collapseStyles = createStyles({\r\n    collapseSections: {\r\n        cursor: 'pointer',\r\n        padding: '1rem 0',\r\n        position: 'relative',\r\n    },\r\n    collapseContainer: {\r\n        position: 'static',\r\n        borderTop: 'none',\r\n    }\r\n})\r\n\r\nexport const generalFormStyles = createStyles({\r\n    outerLayout:{\r\n\r\n    },\r\n    digits : {\r\n        marginTop: '1rem',\r\n    },\r\n\r\n    formSectionMargin: {\r\n        marginBottom: '2rem',\r\n        textAlign: 'center',\r\n    },\r\n    wtilabel: {\r\n        color: colors.core.snow.main,\r\n        marginTop: '1rem',\r\n        marginLeft: '5rem',\r\n    },\r\n    wtibutton:{\r\n        backgroundColor: colors.core.snow.main,\r\n        marginTop: '1rem',\r\n        textAlign: 'left',\r\n        \r\n        marginBottom: '1rem',\r\n        //padding: '3px 3px 10px 10px',\r\n    },\r\n    wtiprice : {\r\n        backgroundColor: colors.core.snow.main,\r\n        marginTop: '1.25rem',\r\n        textAlign: 'left',\r\n        marginBottom: '1rem',\r\n    },\r\n    calcButton: {\r\n        padding: '2rem',\r\n        display: 'flex',\r\n    },\r\n    graphingCalculator : {\r\n        marginTop: '3rem',\r\n        marginRight: '25rem',\r\n        width: '700px',\r\n        height: '400px',\r\n    },\r\n    customBackground : {\r\n        backgroundColor: colors.core.snow.dark,\r\n    },\r\n    wtiBackground:{\r\n        backgroundColor: colors.core.brandBlue.dark,\r\n        marginTop: '1rem',\r\n        padding: '0 0 3px 3px',\r\n        alignItems: 'center'\r\n    },\r\n    calculatorBorder : {\r\n        backgroundColor: colors.core.snow.main,\r\n        marginTop: '3rem',\r\n        marginLeft: '12rem',\r\n        borderStyle: 'groove',\r\n        borderWidth: '7px',\r\n        padding: '2rem',\r\n        width: '350px',\r\n        align: 'center'\r\n    },\r\n    footer: {\r\n        marginTop: '1px',\r\n        backgroundColor: colors.core.black.main,\r\n        color: colors.core.snow.main,\r\n        padding: '0 0 30px 3px',\r\n        textAlign: 'left',\r\n    }\r\n})","import React from \"react\";\r\nimport { Grid, Button, Collapse, Typography } from '@material-ui/core'\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { generalFormStyles } from '../StyleObjects/generalStyles';\r\n//import { colors } from '../helpers/styles/colors'\r\n\r\nconst useFormStyles = makeStyles(generalFormStyles);\r\n\r\nexport default function Keypad({ displayValue, setDisplayValue }) {\r\n    const classes = useFormStyles();\r\n\r\n    const editDisplay = (value) => {\r\n        let str = displayValue.concat(value);\r\n        setDisplayValue(str);\r\n    }\r\n\r\n    const clearDisplay = () => {\r\n        setDisplayValue('');\r\n    }\r\n\r\n    const deleteLast = (textValue) => {\r\n        setDisplayValue(textValue.substring(0, textValue.length - 1));\r\n    }\r\n\r\n    var calculate = function (s, i = 0) {\r\n        if (!s.length) return 0;\r\n      \r\n        s = s.trim();\r\n      \r\n        // utilize a stack since u need to check the entire string for higher priority actions\r\n        let stack = [];\r\n        let currentNumber = 0;\r\n        let operation = '+';\r\n      \r\n        while (i < s.length) {\r\n          if (s[i] === '(') {\r\n            i++;\r\n            let [number, index] = calculate(s, i);\r\n            updateStack(stack, number, operation);\r\n            i = index++;\r\n            operation = s[i++];\r\n            continue;\r\n          } else if (s[i] === ')') {\r\n            updateStack(stack, currentNumber, operation);\r\n            return [getResult(stack), i];\r\n          } else {\r\n            if (!isNaN(s[i])) currentNumber = currentNumber * 10 + s[i].charCodeAt(0) - '0'.charCodeAt(0);\r\n            if (isNaN(s[i]) || i === s.length - 1) {\r\n              updateStack(stack, currentNumber, operation);\r\n              operation = s[i];\r\n              currentNumber = 0;\r\n            }\r\n          }\r\n          i++;\r\n        }\r\n        return setDisplayValue(getResult(stack).toString());\r\n      };\r\n\r\n    const updateStack = function (stack, currentNumber, operation) {\r\n        switch (operation) {\r\n            case '+': stack.push(currentNumber); break;\r\n            case '-': stack.push(-currentNumber); break;\r\n            case '*': stack.push(stack.pop() * currentNumber); break;\r\n            case '÷': stack.push(Math.trunc(stack.pop() / currentNumber)); break;\r\n            case '√': stack.push(Math.sqrt(currentNumber)); break;\r\n            case '^': stack.push(Math.pow(stack.pop(), currentNumber)); break;\r\n        }\r\n    }\r\n\r\n    const getResult = function (stack) {\r\n        return stack.reduce((a, b) => a + b);\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={2} data-testid='keypad-id'>\r\n            <Grid item xs={3}>\r\n                <Button variant=\"contained\" onClick={() => {\r\n                    editDisplay('(');\r\n                }} data-testid='open-bracket-id'> ( </Button>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n                <Button variant=\"contained\" onClick={() => {\r\n                    editDisplay(')');\r\n                }} data-testid='close-bracket-id' > ) </Button>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n                <Button variant=\"contained\" onClick={() => {\r\n                    editDisplay('%');\r\n                }}> % </Button>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n                <Button variant=\"contained\" onClick={() => {\r\n                    clearDisplay();\r\n                }} > AC </Button>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n                <Button variant=\"contained\" onClick={() => {\r\n                    editDisplay('^');\r\n                }} data-testid='exponent-id'> ^ </Button>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n                <Button variant=\"contained\" onClick={() => {\r\n                    editDisplay('√');\r\n                }} data-testid='square-root-id'> {'√'} </Button>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n                <Button variant=\"contained\" > log </Button>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n                <Button variant=\"contained\" onClick={() => {\r\n                    deleteLast(displayValue);\r\n                }}> C </Button>\r\n            </Grid>\r\n            <Grid item xs={3} className={classes.digits}>\r\n                <Button variant=\"contained\" onClick={() => {\r\n                    editDisplay('7');\r\n                }}> 7 </Button>\r\n            </Grid>\r\n            <Grid item xs={3} className={classes.digits}>\r\n                <Button variant=\"contained\" onClick={() => {\r\n                    editDisplay('8');\r\n                }}> 8 </Button>\r\n            </Grid>\r\n            <Grid item xs={3} className={classes.digits}>\r\n                <Button variant=\"contained\" onClick={() => {\r\n                    editDisplay('9');\r\n                }} data-testid='nine-id'> 9 </Button>\r\n            </Grid>\r\n            <Grid item xs={3} className={classes.digits}>\r\n                <Button variant=\"contained\" onClick={() => {\r\n                    editDisplay('÷');\r\n                }} data-testid='div-id'> ÷ </Button>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n                <Button variant=\"contained\" onClick={() => {\r\n                    editDisplay('4');\r\n                }}> 4 </Button>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n                <Button variant=\"contained\" onClick={() => {\r\n                    editDisplay('5');\r\n                }} data-testid='five-id'> 5 </Button>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n                <Button variant=\"contained\" onClick={() => {\r\n                    editDisplay('6');\r\n                }}> 6 </Button>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n                <Button variant=\"contained\" onClick={() => {\r\n                    editDisplay('*');\r\n                }}> * </Button>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n                <Button variant=\"contained\" onClick={() => {\r\n                    editDisplay('1');\r\n                }}> 1 </Button>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n                <Button variant=\"contained\" onClick={() => {\r\n                    editDisplay('2');\r\n                }} data-testid='two-id'> 2 </Button>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n                <Button variant=\"contained\" onClick={() => {\r\n                    editDisplay('3');\r\n                }} data-testid='three-id'> 3 </Button>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n                <Button variant=\"contained\" onClick={() => {\r\n                    editDisplay('-');\r\n                }}> - </Button>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n                <Button variant=\"contained\" onClick={() => {\r\n                    editDisplay('0');\r\n                }}> 0 </Button>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n                <Button variant=\"contained\" onClick={() => {\r\n                    editDisplay('.');\r\n                }}> . </Button>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n                <Button variant=\"contained\" data-testid='evaluation-id' onClick={() => {\r\n                    calculate(displayValue);\r\n                }}> = </Button>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n                <Button variant=\"contained\" onClick={() => {\r\n                    editDisplay('+');\r\n                }} data-testid='add-id'> + </Button>\r\n            </Grid>\r\n        </Grid>\r\n\r\n    );\r\n}","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { generalFormStyles } from '../StyleObjects/generalStyles';\r\n//import { colors } from '../helpers/styles/colors'\r\nimport { Grid, Button, Collapse, Typography, TextField } from '@material-ui/core'\r\nimport Keypad from './Keypad'\r\n\r\nconst useFormStyles = makeStyles(generalFormStyles);\r\n\r\nexport default function BasicCalculator() {\r\n    const classes = useFormStyles();\r\n    const [displayValue, setDisplayValue] = useState('');\r\n    return (\r\n        <Grid className={classes.calculatorBorder}>\r\n            <Typography variant=\"h4\">Basic Calculator</Typography>\r\n            <TextField \r\n            id=\"outlined-basic\" \r\n            data-testid=\"display-id\"\r\n            label=\"\"\r\n            variant=\"outlined\" \r\n            value={displayValue} \r\n            className={classes.calcButton}\r\n            autoFocus\r\n            />\r\n            <Keypad displayValue= {displayValue} setDisplayValue={setDisplayValue}/>\r\n        </Grid>\r\n\r\n    );\r\n}","import React, { useEffect, useRef } from \"react\";\r\nimport { Grid, Collapse, Typography, TextField } from '@material-ui/core'\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { generalFormStyles } from '../StyleObjects/generalStyles';\r\nimport Desmos from 'desmos';\r\n\r\nconst useFormStyles = makeStyles(generalFormStyles);\r\n\r\nexport default function GraphingCalculator() {\r\n    const classes = useFormStyles();\r\n    const graphRef = useRef(null);\r\n    useEffect(()=> {\r\n        if(graphRef.current) {\r\n            let calculator = Desmos.GraphingCalculator(graphRef.current);\r\n            calculator.setExpression({id:'graph1', latex:''});\r\n        }\r\n    },[])\r\n    return (\r\n        <Grid className={classes.graphingCalculator}>\r\n            <Typography variant=\"h4\">Graphing Calculator</Typography>\r\n            <div id=\"graphingCalculator\" className={classes.graphingCalculator} ref={graphRef} />\r\n        </Grid>\r\n    );\r\n}","import React from \"react\";\r\nimport { Grid, Collapse, Typography } from '@material-ui/core'\r\nimport { classExpression } from \"@babel/types\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { generalFormStyles } from '../StyleObjects/generalStyles';\r\n\r\nconst useFormStyles = makeStyles(generalFormStyles);\r\n\r\nexport function Footer() {\r\n    const classes = useFormStyles();\r\n    return (\r\n        <div className={` ${classes.footer}`}>\r\n            <div className={classes.footer}>\r\n                @2021\r\n            </div>       </div>\r\n    );\r\n}","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\nimport { Grid, Button, Collapse, Typography, TextField } from '@material-ui/core'\r\nimport BasicCalculator from './BasicCalculator';\r\nimport GraphingCalculator from './GraphingCalculator';\r\nimport { Footer } from './Footer';\r\nimport { generalFormStyles } from '../StyleObjects/generalStyles';\r\nimport axios from 'axios';\r\nimport parse from 'html-react-parser';\r\nconst useFormStyles = makeStyles(generalFormStyles);\r\n\r\n\r\nexport default function Calculator() {\r\n    const classes = useFormStyles();\r\n    const [wtiPrice, setWtiPrice] = useState([]);\r\n    //const { getByTestId } = render(<BasicCalculatorWithProps />);\r\n    const getWTIPrice = () => {\r\n        //const { getByClass } = render(<div class=\"oilprices__centercolumn\">79.08</div>);\r\n        const requestOptions = {\r\n            //mode: 'no-cors',\r\n            //mode: 'cors',\r\n            method: 'GET',\r\n            Accept: '*/*',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'AccessControlAllowOrigin': '*',\r\n                'AccessControlAllowMethods': 'GET, POST, PATCH, PUT, DELETE, OPTIONS'\r\n            },\r\n            OPTIONS: '',\r\n            AccessControlRequestMethod: 'GET',\r\n            AccessControlRequestHeaders: 'origin',\r\n            Origin: 'https://oilprice.com',\r\n            //AccessControlAllowOrigin : '*',\r\n            //AccessControlAllowMethods: 'GET, POST, PATCH, PUT, DELETE, OPTIONS',\r\n            //AccessControlAllowHeaders: 'Origin, Content-Type, X-Auth-Token',\r\n\r\n        };\r\n\r\n        axios.get(`/oil-price-charts/45`)\r\n            .then((res) => {\r\n                //console.log('response ' + typeof res.data);\r\n                var parser = new DOMParser();\r\n                var htmldoc = parser.parseFromString(res.data, 'text/html');\r\n                console.log('htmldoc ' + htmldoc.getElementsByClassName('last_price')[0].innerHTML);\r\n                let wtiPrice = htmldoc.getElementsByClassName('last_price')[0].innerHTML;\r\n                setWtiPrice(wtiPrice);\r\n            })\r\n            .catch((error) => {\r\n                //setWtiPrice(error)\r\n                //setWtiPrice(error);\r\n                console.log('error' + error);\r\n            });\r\n        //const container = getByClass('oilprices__centercolumn');\r\n        //setWtiPrice(parse(\"<td class='last_price' data-price='79.08'>79.08</td>\"));\r\n    }\r\n\r\n    return (\r\n        <Grid container className={classes.customBackground}>\r\n            <Grid item xs={6}>\r\n                <BasicCalculator />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <GraphingCalculator />\r\n            </Grid>\r\n            <Grid item xs={5} className={classes.wtiBackground}>\r\n                <Typography variant=\"h4\" component=\"h2\" className={classes.wtilabel}>\r\n                    The WTI price of crude oil\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item xs={2} className={classes.wtiBackground}>\r\n                <Button className={classes.wtibutton} variant=\"contained\" size=\"medium\" onClick={() => {\r\n                    getWTIPrice();\r\n                }}> Get WTI Price </Button>\r\n            </Grid>\r\n            <Grid item xs={2} className={classes.wtiBackground}>\r\n                {wtiPrice ? <TextField className={classes.wtiprice} id=\"standard-basic\" label=\"\" variant=\"standard\" value={wtiPrice} /> : null}\r\n            </Grid>\r\n            <Grid item xs={2} className={classes.wtiBackground}>\r\n                </Grid>\r\n                <Grid item xs={1} className={classes.wtiBackground}>\r\n                </Grid>\r\n            <Grid item xs={12}>\r\n                <Footer />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}","import logo from './logo.svg';\nimport './App.css';\nimport Calculator from './Component/Calculator';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Calculator />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}